generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String      @id @default(cuid())
  email        String      @unique
  name         String
  password     String      @default(cuid())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  role         Role
  is_militar   Boolean?
  occupation   String?
  cpf          String?
  date_birth   String?
  cep          String?
  address      String?
  city         String?
  state        String?
  phone        String?
  neighborhood String?
  isActive     Boolean?    @default(true)
  isSubscribed Boolean?    @default(false)
  customer_id  String?
  Dependent    Dependent[]
  tickets      Ticket[]
}

model Dependent {
  id         String   @id @default(cuid())
  name       String
  email      String?
  userId     String
  cpf        String?  @unique
  date_birth String?
  degree     String
  phone      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  isActive   Boolean? @default(true)
  ticketId   String?
  user       User     @relation(fields: [userId], references: [id])
  Ticket     Ticket[]
}

model Ticket {
  id               String     @id @default(cuid())
  title            String
  description      String?
  type             TicketType @default(CLUB_VANTAGES)
  status           Status     @default(PENDING)
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  userId           String
  credential_email String?
  credential_pass  String?
  stripeId         String?
  isActive         Boolean?   @default(true)
  number           Int        @default(autoincrement())
  dependentId      String?
  Dependent        Dependent? @relation(fields: [dependentId], references: [id])
  user             User       @relation(fields: [userId], references: [id])
  Updates          Updates[]
}

model Updates {
  id         String   @id @default(cuid())
  message    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  ticketId   String
  authorName String
  ticket     Ticket   @relation(fields: [ticketId], references: [id])
}

enum Status {
  IN_PROGRESS
  COMPLETED
  PENDING
  CANCELED
}

enum Role {
  ADMIN
  AGENT
  CLIENT
}

enum TicketType {
  CLUB_VANTAGES
  TELEMEDICINE_INDIVIDUAL
  TELEMEDICINE_COUPLE
  TELEMEDICINE_FAMILY
  HEALTH_PLAN
}
